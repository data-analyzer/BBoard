<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.se.board.domain.post.PostMapper">
	<!-- TB_POST 태이블 전체 컬럼 -->
	<sql id="postColumns">
		  ID
		, TITLE
		, CONTENT
		, WRITER
		, VIEW_CNT
		, NOTICE_YN
		, DELETE_YN
		, CREATED_DATE
		, MODIFIED_DATE
	</sql>

	<!-- 게시글 검색 -->
	<sql id="search">
		<!-- 검색 키워드가 있을 때 -->
		<if test="keyword != null and keyword != ''">
			<choose>
				<!-- 검색 유형이 있을 때 -->
				<when test="searchType != null and searchType != ''">
					<choose>
						<when test="'title'.equals( searchType )">
							AND TITLE LIKE CONCAT('%', #{keyword}, '%')
						</when>
						<when test="'content'.equals( searchType )">
							AND CONTENT LIKE CONCAT('%', #{keyword}, '%')
						</when>
						<when test="'writer'.equals( searchType )">
							AND WRITER LIKE CONCAT('%', #{keyword}, '%')
						</when>
					</choose>
				</when>

				<!-- 전체 검색일 때 -->
				<otherwise>
					AND (
						   TITLE LIKE CONCAT('%', #{keyword}, '%')
						OR CONTENT LIKE CONCAT('%', #{keyword}, '%')
						OR WRITER LIKE CONCAT('%', #{keyword}, '%')
					)
				</otherwise>
			</choose>
		</if>
	</sql>

	<!-- 게시글 저장 -->
	<insert id="save" parameterType="com.se.board.domain.post.PostRequest" useGeneratedKeys="true" keyProperty="id">
		INSERT INTO TB_POST (
			<include refid="postColumns" />
		) VALUES (
			#{id}
			, #{title}
			, #{content}
			, #{writer}
			, 0
			, #{noticeYn}
			, 0
			, NOW()
			, NULL
		)
	</insert>

	<!-- 게시글 상세정보 조회 -->
	<select id="findById" parameterType="long" resultType="com.se.board.domain.post.PostResponse">
		SELECT
			<include refid="postColumns" />
		FROM
			TB_POST
		WHERE id = #{value}
	</select>

	<!-- 게시글 수정 -->
    <update id="update" parameterType="com.se.board.domain.post.PostRequest">
        UPDATE TB_POST
        SET
              MODIFIED_DATE = NOW()
            , TITLE = #{title}
            , CONTENT = #{content}
            , WRITER = #{writer}
            , NOTICE_YN = #{noticeYn}
        WHERE
            ID = #{id}
    </update>

    <!-- 게시글 삭제 -->
    <delete id="deleteById" parameterType="long">
        UPDATE TB_POST
        SET
            DELETE_YN = 1
        WHERE
            ID = #{id}
    </delete>

	<!-- 게시글 리스트 조회 --> <!-- LIMIT #{offset}, #{recordSize} 변경 -->
	<select id="findAll" parameterType="com.se.board.common.dto.SearchDto" resultType="com.se.board.domain.post.PostResponse">
		SELECT
			<include refid="postColumns" />
		FROM
			TB_POST
		WHERE
			DELETE_YN = 0
			<include refid="search" />
		ORDER BY
			ID DESC
		LIMIT #{pagination.limitStart}, #{recordSize}
	</select>

	<!-- 게시글 수 카운팅 -->
	<select id="count" parameterType="com.se.board.common.dto.SearchDto" resultType="int">
		SELECT
			COUNT(*)
		FROM
			TB_POST
		WHERE
			DELETE_YN = 0
			<include refid="search" />
	</select>

</mapper>